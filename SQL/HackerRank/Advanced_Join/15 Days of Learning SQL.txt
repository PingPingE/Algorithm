-- 나의 풀이: dense_rank 활용
with tmp as(
    select t.submission_date, 
    h.hacker_id, 
    h.name,
    -- 각 submission_date가 대회 며칠째인지 -> date_num 
    dense_rank() over(order by t.submission_date) as date_num,
    
    -- 각 hacker_id별로 해당 date에 내는게 몇 번째 submission인지 -> sub_num
    dense_rank() over(partition by h.hacker_id order by t.submission_date) as sub_num,
    
    -- 각 date에 최다 submission + 그 중 id도 가장 작은사람 순위 매기기 -> row_num
    row_number() over(partition by t.submission_date 
                      order by t.sub_cnt desc, h.hacker_id)as row_num
    from 
    (
        select submission_date, hacker_id, count(submission_id)as sub_cnt
        from submissions
        group by submission_date, hacker_id
    )t
    join
        hackers as h
    on t.hacker_id = h.hacker_id
)

select t1.submission_date, t2.cnt, t1.hacker_id, t1.name 
from (
    -- 각 date 최다 제출자
    select submission_date,hacker_id, name
    from tmp
    where row_num=1
)t1
join
(
    -- date_num과 sub_num이 같다면 현재 date까진 매일 제출한 사람
    select submission_date, count(distinct hacker_id) as cnt
    from tmp
    where date_num=sub_num
    group by submission_date
)t2
on t1.submission_date = t2.submission_date



-- 이 문제의 핵심은 이전의 모든 대회 참가 여부를 어떻게 추출해낼 것인지 생각해내는 것
-- 코드 출처: https://www.hackerrank.com/challenges/15-days-of-learning-sql/forum 


select 
    submission_date ,
    -- 현재 submission_date까지 하루도 빠짐 없이 제출한 사람의 수
    ( 
        select count(distinct hacker_id)  
        from Submissions s2
        where s2.submission_date = s1.submission_date 
        
        -- 현재 이전에 참가(제출)한 모든 대회를 카운트하고,
        -- 대회 첫 날인 2016-03-01과 현재 날짜와의 차이의 값과 해당 카운트 값이 같다면
        -- 모든 대회에 참여한 것
        and    
            (select count(distinct s3.submission_date) 
             from Submissions s3 
             where s3.hacker_id = s2.hacker_id 
             and s3.submission_date < s1.submission_date) 
        = dateDIFF(s1.submission_date , '2016-03-01')
    ) ,
    
    -- 최다 제출자 추출
    (
        select hacker_id  
        from submissions s2 
        where s2.submission_date = s1.submission_date 
        group by hacker_id 
        order by count(submission_id) desc , hacker_id limit 1
    ) as shit,
    (
        select name 
        from hackers 
        where hacker_id = shit
    )
from 
(
    select distinct submission_date 
    from submissions
) s1
group by submission_date
     
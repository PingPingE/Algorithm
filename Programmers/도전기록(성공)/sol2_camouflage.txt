from itertools import combinations
from collections import defaultdict

m = defaultdict(list)    
def solution(clothes):
    global m
    m = defaultdict(list)
    for i in clothes:
        m[i[-1]].append(i[0])

    if len(m) > 1:
        return sol(1,0)
    else:
        return len(*m.values())

def sol(n, tmp):
    global m
    if n == len(m)+1:
        return tmp
    for j in list(combinations(m.keys(),n)):
        k = 1
        for kk in list(len(m[jj]) for jj in j):
            k *= kk
        tmp += k
    return sol(n+1, tmp)

테스트 1 〉	실패 (시간 초과)
테스트 2 〉	통과 (0.04ms, 10.7MB)
테스트 3 〉	통과 (0.16ms, 10.7MB)
테스트 4 〉	통과 (409.56ms, 16.8MB)
테스트 5 〉	통과 (0.16ms, 10.8MB)
테스트 6 〉	통과 (0.07ms, 10.7MB)
테스트 7 〉	통과 (416.67ms, 16.8MB)
테스트 8 〉	통과 (2.22ms, 10.8MB)
테스트 9 〉	통과 (0.05ms, 10.8MB)
테스트 10 〉	통과 (0.05ms, 10.7MB)
테스트 11 〉	통과 (0.07ms, 10.8MB)
테스트 12 〉	통과 (9.94ms, 11.3MB)
테스트 13 〉	통과 (44.61ms, 12.2MB)
테스트 14 〉	통과 (0.07ms, 10.6MB)
테스트 15 〉	통과 (0.05ms, 10.8MB)
테스트 16 〉	통과 (0.04ms, 10.7MB)
테스트 17 〉	통과 (0.05ms, 10.7MB)
테스트 18 〉	통과 (0.29ms, 10.7MB)
테스트 19 〉	통과 (2.38ms, 10.8MB)
테스트 20 〉	통과 (0.07ms, 10.7MB)
테스트 21 〉	통과 (0.04ms, 10.7MB)
테스트 22 〉	통과 (0.05ms, 10.7MB)
테스트 23 〉	통과 (0.05ms, 10.7MB)
테스트 24 〉	통과 (0.07ms, 10.9MB)
테스트 25 〉	통과 (1.18ms, 10.8MB)
테스트 26 〉	통과 (874.94ms, 23.7MB)
테스트 27 〉	통과 (0.05ms, 10.7MB)
테스트 28 〉	통과 (1.17ms, 10.9MB)
'''
문제 설명
0 또는 양의 정수가 주어졌을 때, 정수를 이어 붙여 만들 수 있는 가장 큰 수를 알아내 주세요.

예를 들어, 주어진 정수가 [6, 10, 2]라면 [6102, 6210, 1062, 1026, 2610, 2106]를 만들 수 있고, 이중 가장 큰 수는 6210입니다.

0 또는 양의 정수가 담긴 배열 numbers가 매개변수로 주어질 때, 순서를 재배치하여 만들 수 있는 가장 큰 수를 문자열로 바꾸어 return 하도록 solution 함수를 작성해주세요.

제한 사항
numbers의 길이는 1 이상 100,000 이하입니다.
numbers의 원소는 0 이상 1,000 이하입니다.
정답이 너무 클 수 있으니 문자열로 바꾸어 return 합니다.
'''

def make_str(target):
    tmp = str(target)*3
    return tmp
    #return tmp[:4] -> 굳이 4자리로 끊을 필요도 없다.
    #return (tmp[:4],-len(str(target))) ->굳이 길이까지 넣어줄 필요가 없다.(더 느림)


def solution(numbers):
    #sorted_nums = sorted(numbers, key=lambda x:  make_str(x), reverse= True)

    #lambda로 더 간결하고 빠르게
    sorted_nums = sorted(numbers, key=lambda x:  str(x)*3, reverse= True)    
    result = ''.join(map(str,sorted_nums)).lstrip('0') 
    return result if len(result)>1 else '0'

'''
정확성  테스트
테스트 1 〉	통과 (95.79ms, 23MB)
테스트 2 〉	통과 (51.42ms, 17.1MB)
테스트 3 〉	통과 (134.99ms, 27.3MB)
테스트 4 〉	통과 (2.83ms, 10.7MB)
테스트 5 〉	통과 (86.78ms, 21.5MB)
테스트 6 〉	통과 (74.36ms, 20MB)
테스트 7 〉	통과 (0.04ms, 10.2MB)
테스트 8 〉	통과 (0.03ms, 10.3MB)
테스트 9 〉	통과 (0.03ms, 10.2MB)
테스트 10 〉	통과 (0.03ms, 10.1MB)
테스트 11 〉	통과 (0.06ms, 10.2MB)
채점 결과
정확성: 100.0
합계: 100.0 / 100.0
'''

'''
#return tmp[:4]
정확성  테스트
테스트 1 〉	통과 (63.54ms, 18.8MB)
테스트 2 〉	통과 (29.78ms, 14.6MB)
테스트 3 〉	통과 (76.61ms, 21.4MB)
테스트 4 〉	통과 (2.01ms, 10.3MB)
테스트 5 〉	통과 (49.55ms, 17.9MB)
테스트 6 〉	통과 (42.88ms, 16.7MB)
테스트 7 〉	통과 (0.03ms, 10.1MB)
테스트 8 〉	통과 (0.02ms, 10.2MB)
테스트 9 〉	통과 (0.02ms, 10.2MB)
테스트 10 〉	통과 (0.02ms, 10.1MB)
테스트 11 〉	통과 (0.04ms, 10MB)
'''

'''
#return tmp
정확성  테스트
테스트 1 〉	통과 (57.89ms, 18.8MB)
테스트 2 〉	통과 (29.80ms, 14.6MB)
테스트 3 〉	통과 (72.41ms, 21.4MB)
테스트 4 〉	통과 (1.91ms, 10.3MB)
테스트 5 〉	통과 (49.56ms, 17.8MB)
테스트 6 〉	통과 (47.38ms, 16.8MB)
테스트 7 〉	통과 (0.02ms, 10.2MB)
테스트 8 〉	통과 (0.02ms, 10.1MB)
테스트 9 〉	통과 (0.02ms, 10.2MB)
테스트 10 〉	통과 (0.02ms, 10.2MB)
테스트 11 〉	통과 (0.04ms, 10.1MB)
'''

'''
#labmda x: str(x)*3으로 하면 조금 더 빠르다
정확성  테스트
테스트 1 〉	통과 (56.09ms, 18.6MB)
테스트 2 〉	통과 (28.15ms, 14.7MB)
테스트 3 〉	통과 (70.67ms, 21.5MB)
테스트 4 〉	통과 (1.72ms, 10.3MB)
테스트 5 〉	통과 (48.71ms, 17.7MB)
테스트 6 〉	통과 (41.12ms, 16.9MB)
테스트 7 〉	통과 (0.02ms, 10.2MB)
테스트 8 〉	통과 (0.02ms, 10.2MB)
테스트 9 〉	통과 (0.02ms, 10.2MB)
테스트 10 〉	통과 (0.02ms, 10.1MB)
테스트 11 〉	통과 (0.03ms, 10.2MB)
'''
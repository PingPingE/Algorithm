'''
문제 설명
다음 규칙을 지키는 문자열을 올바른 괄호 문자열이라고 정의합니다.

(), [], {} 는 모두 올바른 괄호 문자열입니다.
만약 A가 올바른 괄호 문자열이라면, (A), [A], {A} 도 올바른 괄호 문자열입니다. 예를 들어, [] 가 올바른 괄호 문자열이므로, ([]) 도 올바른 괄호 문자열입니다.
만약 A, B가 올바른 괄호 문자열이라면, AB 도 올바른 괄호 문자열입니다. 예를 들어, {} 와 ([]) 가 올바른 괄호 문자열이므로, {}([]) 도 올바른 괄호 문자열입니다.
대괄호, 중괄호, 그리고 소괄호로 이루어진 문자열 s가 매개변수로 주어집니다.
이 s를 왼쪽으로 x (0 ≤ x < (s의 길이)) 칸만큼 회전시켰을 때 s가 올바른 괄호 문자열이 되게 하는 x의 개수를 return 하도록 solution 함수를 완성해주세요.

제한사항
s의 길이는 1 이상 1,000 이하입니다.
'''

from collections import deque
def check(deq_s):
    st = []
    pair = {'(': ')', '{': '}', '[': ']'}
    for s in deq_s:
        if s in pair:#열림
            st.append(s)
        else:#닫힘
            if st:
                if s == pair[st[-1]]:
                    st.pop()
                else:
                    return 0
            else:
                return 0

    #주의: 마지막에 st 비었는지 체크
    return 0 if st else 1

def solution(s):
    deq_s= deque(s)
    cnt=0
    for _ in range(len(s)):
        deq_s.rotate(-1)
        if check(deq_s):
            cnt+=1
    return cnt

'''
정확성  테스트
테스트 1 〉	통과 (5.73ms, 10.2MB)
테스트 2 〉	통과 (3.16ms, 10.3MB)
테스트 3 〉	통과 (3.37ms, 10.2MB)
테스트 4 〉	통과 (4.53ms, 10.3MB)
테스트 5 〉	통과 (16.98ms, 10.3MB)
테스트 6 〉	통과 (7.32ms, 10.5MB)
테스트 7 〉	통과 (9.53ms, 10.3MB)
테스트 8 〉	통과 (12.92ms, 10.2MB)
테스트 9 〉	통과 (23.68ms, 10.2MB)
테스트 10 〉	통과 (33.65ms, 10.3MB)
테스트 11 〉	통과 (49.52ms, 10.2MB)
테스트 12 〉	통과 (0.01ms, 10.2MB)
테스트 13 〉	통과 (0.01ms, 10.3MB)
테스트 14 〉	통과 (0.01ms, 10.2MB)
채점 결과
정확성: 100.0
합계: 100.0 / 100.0
'''
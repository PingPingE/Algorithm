import heapq
def solution(scoville, K):
    heapq.heapify(scoville)
    answer = 0
    while scoville[0] < K:
        if len(scoville) == 1:
            return -1
        heapq.heappush(scoville, heapq.heappop(scoville) + heapq.heappop(scoville)*2)
        answer+= 1

    return answer


정확성  테스트
테스트 1 〉	통과 (0.04ms, 10.6MB)
테스트 2 〉	통과 (0.04ms, 10.6MB)
테스트 3 〉	통과 (0.05ms, 10.7MB)
테스트 4 〉	통과 (0.04ms, 10.7MB)
테스트 5 〉	통과 (0.04ms, 10.6MB)
테스트 6 〉	통과 (0.50ms, 10.7MB)
테스트 7 〉	통과 (0.42ms, 10.6MB)
테스트 8 〉	통과 (0.09ms, 10.7MB)
테스트 9 〉	통과 (0.08ms, 10.6MB)
테스트 10 〉	통과 (0.40ms, 10.7MB)
테스트 11 〉	통과 (0.23ms, 10.9MB)
테스트 12 〉	통과 (0.80ms, 10.9MB)
테스트 13 〉	통과 (0.43ms, 10.7MB)
테스트 14 〉	통과 (0.05ms, 10.6MB)
테스트 15 〉	통과 (0.54ms, 10.6MB)
테스트 16 〉	통과 (0.04ms, 10.7MB)
효율성  테스트
테스트 1 〉	통과 (186.16ms, 116MB)
테스트 2 〉	통과 (383.64ms, 215MB)
테스트 3 〉	통과 (1935.90ms, 707MB)
테스트 4 〉	통과 (142.13ms, 95.8MB)
테스트 5 〉	통과 (1850.47ms, 741MB)

'''
짝지어 제거하기
문제 설명)
짝지어 제거하기는, 알파벳 소문자로 이루어진 문자열을 가지고 시작합니다. 
먼저 문자열에서 같은 알파벳이 2개 붙어 있는 짝을 찾습니다. 
그다음, 그 둘을 제거한 뒤, 앞뒤로 문자열을 이어 붙입니다. 
이 과정을 반복해서 문자열을 모두 제거한다면 짝지어 제거하기가 종료됩니다. 
문자열 S가 주어졌을 때, 짝지어 제거하기를 성공적으로 수행할 수 있는지 반환하는 함수를 완성해 주세요. 
성공적으로 수행할 수 있으면 1을, 아닐 경우 0을 리턴해주면 됩니다.

예를 들어, 문자열 S = baabaa 라면

b aa baa → bb aa → aa →

의 순서로 문자열을 모두 제거할 수 있으므로 1을 반환합니다.

제한사항)
문자열의 길이 : 1,000,000이하의 자연수
문자열은 모두 소문자로 이루어져 있습니다.
'''

#원소 두 개씩 보면서 공백으로 바꾸는 것 보다는
#stack , deque를 활용하여 효율적으로

from collections import deque

def solution(s):
    s = list(s)

    #sol함수의 인자로 s를 전달했을 땐 일부 테케에서 런타임에러가 났음
    def sol():
        nonlocal s
        new_s = deque()
        while s:
            if len(new_s) >0 and s[-1] == new_s[0]:
                new_s.popleft()
            else:
                new_s.appendleft(s[-1])
            s.pop()
        return new_s

    while len(s) > 0:
        before = len(s)
        s = sol()
        if len(s) == before:
            return 0
    return 1

'''
정확성  테스트
테스트 1 〉	통과 (0.01ms, 10.1MB)
테스트 2 〉	통과 (17.34ms, 11MB)
테스트 3 〉	통과 (20.36ms, 11.1MB)
테스트 4 〉	통과 (21.16ms, 11.1MB)
테스트 5 〉	통과 (21.75ms, 11.2MB)
테스트 6 〉	통과 (20.42ms, 11.1MB)
테스트 7 〉	통과 (20.34ms, 11.1MB)
테스트 8 〉	통과 (24.39ms, 11.1MB)
테스트 9 〉	통과 (0.01ms, 10.3MB)
테스트 10 〉	통과 (0.04ms, 10.2MB)
테스트 11 〉	통과 (0.01ms, 10.2MB)
테스트 12 〉	통과 (0.01ms, 10.2MB)
테스트 13 〉	통과 (0.01ms, 10.2MB)
효율성  테스트
테스트 1 〉	통과 (210.07ms, 22.6MB)
테스트 2 〉	통과 (175.30ms, 18.5MB)
테스트 3 〉	통과 (207.16ms, 20.1MB)
테스트 4 〉	통과 (204.79ms, 20.1MB)
테스트 5 〉	통과 (207.83ms, 20.1MB)
테스트 6 〉	통과 (208.95ms, 20MB)
테스트 7 〉	통과 (208.83ms, 20MB)
테스트 8 〉	통과 (196.93ms, 20.8MB)
'''
def solution(numbers, target):
    answer = sol(0,0, numbers, target)
    return answer

def sol(current, cnt, numbers, target):
    if cnt == len(numbers):
        if current == target:
            return 1
        return 0
    return  sol(current+numbers[cnt], cnt+1, numbers, target) + sol(current-numbers[cnt],cnt+1, numbers, target)

테스트 1 〉	통과 (374.00ms, 10.7MB)
테스트 2 〉	통과 (379.25ms, 10.8MB)
테스트 3 〉	통과 (0.39ms, 10.8MB)
테스트 4 〉	통과 (1.52ms, 10.8MB)
테스트 5 〉	통과 (12.00ms, 10.8MB)
테스트 6 〉	통과 (0.78ms, 10.7MB)
테스트 7 〉	통과 (0.43ms, 10.7MB)
테스트 8 〉	통과 (3.52ms, 10.8MB)


#다른 사람 코드

def solution(numbers, target):
    if not numbers and target == 0 : #시작이 0인 값에서부터 연산을 통해 == target이 아닌, target부터 연산을 시작해서 0이 되게함
        return 1
    elif not numbers:
        return 0
    else:
        return solution(numbers[1:], target-numbers[0]) + solution(numbers[1:], target+numbers[0]) 
#numbers list의 첫번째 값을 뒤 연산에 쓰면서 numbers의 길이를 하나씩 줄여나감 
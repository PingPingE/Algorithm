def solution(budgets, M):
    answer = 0
    budgets.sort()
    right = budgets[-1]
    left = 0
    while right>=left:
        mid =(right+left)//2
        target_num = len(list(filter(lambda x: x>mid, budgets)))
        total = sum(budgets[:len(budgets)-target_num])+mid*target_num
        if total <=M:
            answer = mid
            left = mid+1
        else:
            right = mid-1
    return answer

'''
정확성  테스트
테스트 1 〉	통과 (0.14ms, 10.7MB)
테스트 2 〉	통과 (0.20ms, 10.8MB)
테스트 3 〉	통과 (0.15ms, 10.8MB)
테스트 4 〉	통과 (0.10ms, 10.7MB)
테스트 5 〉	통과 (0.10ms, 10.7MB)
테스트 6 〉	통과 (0.17ms, 10.7MB)
테스트 7 〉	통과 (0.10ms, 10.6MB)
테스트 8 〉	통과 (0.11ms, 10.7MB)
테스트 9 〉	통과 (0.15ms, 10.7MB)
테스트 10 〉	통과 (0.11ms, 10.7MB)
테스트 11 〉	통과 (0.18ms, 10.8MB)
테스트 12 〉	통과 (0.18ms, 10.7MB)
테스트 13 〉	통과 (0.12ms, 10.6MB)
테스트 14 〉	통과 (0.16ms, 10.7MB)
테스트 15 〉	통과 (0.06ms, 10.8MB)
효율성  테스트
테스트 1 〉	통과 (3.26ms, 11MB)
테스트 2 〉	통과 (80.60ms, 49.7MB)
테스트 3 〉	통과 (8.33ms, 12MB)
테스트 4 〉	통과 (4.67ms, 11.1MB)
테스트 5 〉	통과 (8.19ms, 11.6MB)
'''
from collections import deque
def solution(triangle):
    answer = -1
    remain = 0
    maxx = {}
    for i in range(len(triangle)-1,-1,-1): #각 행의 최댓값의 합 -> 뒤에서부터 해야함
        remain += max(triangle[i])
        maxx[i] = remain
    stack = deque()
    stack.append([0,0,0])#행,열,값
    cnt =0
    while stack:
        cnt +=1
        i,j,tmp = stack.pop()
        if i == len(triangle):
            answer = max(answer,tmp)
            if answer == maxx[0]:
                break
            continue
        cur = tmp+triangle[i][j]
        if tmp+maxx[i] <= answer:
            continue
        stack.append([i+1,j,tmp+triangle[i][j]])
        stack.append([i+1,j+1,tmp+triangle[i][j]])
    return answer

정확성  테스트
테스트 1 〉	통과 (0.11ms, 10.7MB)
테스트 2 〉	통과 (0.30ms, 10.6MB)
테스트 3 〉	통과 (2.37ms, 10.7MB)
테스트 4 〉	통과 (259.27ms, 10.8MB)
테스트 5 〉	실패 (시간 초과)
테스트 6 〉	실패 (시간 초과)
테스트 7 〉	실패 (시간 초과)
테스트 8 〉	통과 (5130.23ms, 10.9MB)
테스트 9 〉	통과 (0.13ms, 10.6MB)
테스트 10 〉	통과 (533.58ms, 10.7MB)
효율성  테스트
테스트 1 〉	실패 (시간 초과)
테스트 2 〉	실패 (시간 초과)
테스트 3 〉	실패 (시간 초과)
테스트 4 〉	실패 (시간 초과)
테스트 5 〉	실패 (시간 초과)
'''
문제 설명
0과 1로 이루어진 어떤 문자열 x에 대한 이진 변환을 다음과 같이 정의합니다.

x의 모든 0을 제거합니다.
x의 길이를 c라고 하면, x를 "c를 2진법으로 표현한 문자열"로 바꿉니다.
예를 들어, x = "0111010"이라면, x에 이진 변환을 가하면 x = "0111010" -> "1111" -> "100" 이 됩니다.

0과 1로 이루어진 문자열 s가 매개변수로 주어집니다. s가 "1"이 될 때까지 계속해서 s에 이진 변환을 가했을 때, 
이진 변환의 횟수와 변환 과정에서 제거된 모든 0의 개수를 각각 배열에 담아 return 하도록 solution 함수를 완성해주세요.

제한사항
s의 길이는 1 이상 150,000 이하입니다.
s에는 '1'이 최소 하나 이상 포함되어 있습니다.

입출력 예
s	result
"110010101001"	[3,8]
"01110"	[3,3]
"1111111"	[4,1]
'''

del_cnt=0
def step1(x):
    global del_cnt
    ret_x =[]
    for i in x:
        if i=='1':
            ret_x.append('1')
        else:
            del_cnt+=1
    return ''.join(ret_x)

def step2(x):
    c= len(x)
    return bin(c)[2:]

def solution(s):
    b_cnt=0
    while s!='1':
        s=step2(step1(s))
        b_cnt+=1
    return [b_cnt,del_cnt]


'''
정확성  테스트
테스트 1 〉	통과 (0.02ms, 10.2MB)
테스트 2 〉	통과 (11.28ms, 10.3MB)
테스트 3 〉	통과 (0.01ms, 10.3MB)
테스트 4 〉	통과 (0.01ms, 10.1MB)
테스트 5 〉	통과 (0.01ms, 10.2MB)
테스트 6 〉	통과 (0.10ms, 10.2MB)
테스트 7 〉	통과 (0.17ms, 10.3MB)
테스트 8 〉	통과 (0.11ms, 10.3MB)
테스트 9 〉	통과 (6.08ms, 11MB)
테스트 10 〉	통과 (11.22ms, 10.4MB)
테스트 11 〉	통과 (8.44ms, 10.3MB)
채점 결과
정확성: 100.0
합계: 100.0 / 100.0
'''
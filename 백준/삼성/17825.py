'''
주사위 윷놀이는 다음과 같은 게임판에서 하는 게임이다.
처음에는 시작 칸에 말 4개가 있다.
말은 게임판에 그려진 화살표의 방향대로만 이동할 수 있다. 말이 파란색 칸에서 이동을 시작하면 파란색 화살표를 타야 하고, 
이동하는 도중이거나 파란색이 아닌 칸에서 이동을 시작하면 빨간색 화살표를 타야 한다. 말이 도착 칸으로 이동하면 주사위에 나온 수와 관계 없이 이동을 마친다.
게임은 10개의 턴으로 이루어진다. 매 턴마다 1부터 5까지 한 면에 하나씩 적혀있는 5면체 주사위를 굴리고, 
도착 칸에 있지 않은 말을 하나 골라 주사위에 나온 수만큼 이동시킨다.
말이 이동을 마치는 칸에 다른 말이 있으면 그 말은 고를 수 없다. 단, 이동을 마치는 칸이 도착 칸이면 고를 수 있다.
말이 이동을 마칠 때마다 칸에 적혀있는 수가 점수에 추가된다.
주사위에서 나올 수 10개를 미리 알고 있을 때, 얻을 수 있는 점수의 최댓값을 구해보자.

입력)
첫째 줄에 주사위에서 나올 수 10개가 순서대로 주어진다.

출력)
얻을 수 있는 점수의 최댓값을 출력한다.
'''
#122488kb 588ms
from itertools  import product
turn = list(map(int,input().split()))
board = {0:[0,1,2,3,4,5]} #key: 번호,  value:[point, 1칸이동 후 번호, 2칸 이동 후 번호...5칸 이동 후 번호]
for n in range(1,16):
    tmp = [n * 2]
    if n == 5:
        tmp.extend([21,22,23,29,30])
    elif n==10:
        tmp.extend([24,25,29,30,31])
    elif n==15:
        tmp.extend([26,27,28,29,30])
    else:
        tmp.extend([min(n+_,32) for _ in range(1,6)])
    board[n] = tmp
board[16] = [32,17,18,19,20,32]
board[17] = [34,18,19,20,32,32]
board[18] = [36,19,20,32,32,32]
board[19] = [38,20,32,32,32,32]
board[20] = [40,32,32,32,32,32]
board[21] = [13,22,23,29,30,31]
board[22] = [16,23,29,30,31,20]
board[23] = [19,29,30,31,20,32]
board[24] = [22,25,29,30,31,20]
board[25] = [24,29,30,31,20,32]
board[26] = [28,27,28,29,30,31]
board[27] = [27,28,29,30,31,20]
board[28] = [26,29,30,31,20,32]
board[29] = [25,30,31,20,32,32]
board[30] = [30,31,20,32,32,32]
board[31] = [35,20,32,32,32,32]
board[32] = [0,32,32,32,32,32]

target= [[0,1,2,3] for _ in range(10)]
ret= 0
for order in product(*target): #모든 조합 구하기
    horses=[0,0,0,0]  #각 말의 현 위치(board의 key)
    point =0
    for e,o in enumerate(order):
        next = board[horses[o]][turn[e]]
        if next != 32 and next in horses:
            break
        horses[o] = next
        point += board[next][0]
    else:
        ret = max(ret, point)
print(ret)
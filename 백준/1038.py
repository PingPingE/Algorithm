'''
문제
음이 아닌 정수 X의 자릿수가 가장 큰 자릿수부터 작은 자릿수까지 감소한다면, 그 수를 감소하는 수라고 한다.
예를 들어, 321과 950은 감소하는 수지만, 322와 958은 아니다. N번째 감소하는 수를 출력하는 프로그램을 작성하시오.
0은 0번째 감소하는 수이고, 1은 1번째 감소하는 수이다. 만약 N번째 감소하는 수가 없다면 -1을 출력한다.

입력
첫째 줄에 N이 주어진다. N은 1,000,000보다 작거나 같은 자연수 또는 0이다.

출력
첫째 줄에 N번째 감소하는 수를 출력한다.
'''
#123212kb	532ms
def check(x): #감소하는 수인지 체크 + 얼마만큼 점프해야하는지 return
    rem=0#체크한 개수
    prev=-1#이전 수(현재 보다 작은 자릿수)
    while x>9:#가장 작은 자릿수부터 본다.
        if x%10 > prev:#작은 자릿수부터 보니까 증가하는 수인지 체크한다.
            prev=x%10
            x//=10
            rem+=1
        else:
            break

    if x<10:#한 자릿수 남았을 때
        if x>prev:
            return 0
    return rem

N = int(input())
ans=-1
n,i=0,0
if N<1023:#====1022가 9876543210이므로 그 이상은 감소하는 수가 나올 수 없음(해당 조건 없으면 시간초과)
    while n<=N and i<=9876543210:
        tmp = check(i)
        if tmp==0:#감소하는 수인 경우
            if n==N:
                ans=i
            n+=1
            i+=1
        else:#아닌 경우 점프
            i+=(10**tmp)-i%(10**tmp)#ex) i=221이라면 tmp=2 -> 300으로 점프
print(ans)
'''
계단 오르기 게임은 계단 아래 시작점부터 계단 꼭대기에 위치한 도착점까지 가는 게임이다.
<그림 1>과 같이 각각의 계단에는 일정한 점수가 쓰여 있는데 계단을 밟으면 그 계단에 쓰여 있는 점수를 얻게 된다.

예를 들어 <그림 2>와 같이 시작점에서부터 첫 번째, 두 번째, 네 번째, 여섯 번째 계단을 밟아 도착점에 도달하면 총 점수는 10 + 20 + 25 + 20 = 75점이 된다.

계단 오르는 데는 다음과 같은 규칙이 있다.

1. 계단은 한 번에 한 계단씩 또는 두 계단씩 오를 수 있다. 즉, 한 계단을 밟으면서 이어서 다음 계단이나, 다음 다음 계단으로 오를 수 있다.
2. 연속된 세 개의 계단을 모두 밟아서는 안 된다. 단, 시작점은 계단에 포함되지 않는다.
3. 마지막 도착 계단은 반드시 밟아야 한다.

따라서 첫 번째 계단을 밟고 이어 두 번째 계단이나, 세 번째 계단으로 오를 수 있다.
하지만, 첫 번째 계단을 밟고 이어 네 번째 계단으로 올라가거나, 첫 번째, 두 번째, 세 번째 계단을 연속해서 모두 밟을 수는 없다.

각 계단에 쓰여 있는 점수가 주어질 때 이 게임에서 얻을 수 있는 총 점수의 최댓값을 구하는 프로그램을 작성하시오.

입력
입력의 첫째 줄에 계단의 개수가 주어진다.

둘째 줄부터 한 줄에 하나씩 제일 아래에 놓인 계단부터 순서대로 각 계단에 쓰여 있는 점수가 주어진다. 계단의 개수는 300이하의 자연수이고, 계단에 쓰여 있는 점수는 10,000이하의 자연수이다.

출력
첫째 줄에 계단 오르기 게임에서 얻을 수 있는 총 점수의 최댓값을 출력한다.
'''
#T1: 4분 36초
#T2: 14분 5초(9분 29초)
#T3: 35분 22초(21분 17초) -> '포도주 시식'문제와 같다고 생각한 것이 틀린 원인

'''
[포도주 시식 문제와 다른 점]
1. 마지막 지점을 꼭 포함해야한다.
2. 각 지점에서의 max 값을 갱신할 때, 이전 지점까지의 max값을 고려해버리면 안된다.
-> 만약 max(memo[i-2]+points[i], memo[i-3]+points[i-1]+points[i])에서 max(memo[i-1])도 고려한다면,
규칙 1을 만족시키지 못할 수 있다. ex) 100 100 1 1 100 100 -> 400이 나와버릴 것이다. 
하지만 그렇게 되면 1 1 두칸을 건너 뛰는 것이므로 규칙 1 만족 X

정리)
포도주 시식: 이전 지점까지의 max값이 더 크면 현재 지점을 포함시키지 않아도 된다. 
-> 단, 이전 지점의 max값에도 이전 지점의 값이 포함 되어 있다는 보장이 없다. 그래서 계단 오르기의 규칙 위반
'''

#121220kb	108ms
N = int(input())
points = [0] + list(int(input()) for _ in range(N))
memo = list(0 for _ in range(N+1))
if N<=2:
    print(sum(points))
else:
    memo[1] = points[1]
    memo[2] = points[1] + points[2]
    for i in range(3, N+1):
        memo[i] = max(memo[i-2]+points[i], memo[i-3]+points[i-1]+points[i])
    print(memo[-1])